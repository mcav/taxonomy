initSidebarItems({"fn":[["plugin_registrar",""]],"macro":[["if_let_chain!","Produce a nested chain of if-lets and ifs from the patterns:"]],"mod":[["approx_const",""],["array_indexing",""],["attrs","checks for attributes"],["bit_mask",""],["block_in_if_condition",""],["collapsible_if","Checks for if expressions that contain only an if expression."],["consts",""],["copies",""],["cyclomatic_complexity","calculate cyclomatic complexity and warn about overly complex functions"],["derive",""],["drop_ref",""],["entry",""],["enum_clike","lint on C-like enums that are `repr(isize/usize)` and have values that don't fit into an `i32`"],["enum_glob_use","lint on `use`ing all variants of an enum"],["enum_variants","lint on enum variants that are prefixed or suffixed by the same characters"],["eq_op",""],["escape",""],["eta_reduction",""],["format",""],["formatting",""],["identity_op",""],["if_not_else","lint on if branches that could be swapped so no `!` operation is necessary on the condition"],["items_after_statements","lint when items are used after statements"],["len_zero",""],["lifetimes",""],["loops",""],["map_clone",""],["matches",""],["methods",""],["minmax",""],["misc",""],["misc_early",""],["mut_mut",""],["mut_reference",""],["mutex_atomic","Checks for uses of Mutex where an atomic value could be used"],["needless_bool","Checks for needless boolean results of if-else expressions"],["needless_features","Checks for usage of nightly features that have simple stable equivalents"],["needless_update",""],["no_effect",""],["open_options",""],["panic",""],["precedence",""],["print",""],["ptr_arg","Checks for usage of &Vec[_] and &String"],["ranges",""],["regex",""],["returns",""],["shadow",""],["strings","This LintPass catches both string addition and string addition + assignment"],["swap",""],["temporary_assignment",""],["transmute",""],["types",""],["unicode",""],["utils",""],["vec",""],["zero_div_zero",""]]});